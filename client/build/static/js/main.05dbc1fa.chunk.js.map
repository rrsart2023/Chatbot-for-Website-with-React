{"version":3,"sources":["components/chatbot/Message.js","components/chatbot/Card.js","components/chatbot/QuickReply.js","components/chatbot/QuickReplies.js","components/chatbot/Chatbot.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Message","props","className","speaks","href","text","Card","style","height","paddingRight","float","width","alt","payload","header","src","image","description","price","target","rel","link","QuickReply","reply","margin","onClick","event","click","QuickReplies","_handleClick","bind","this","replyClick","i","key","quickReplies","map","renderQuickReply","id","renderQuickReplies","Component","cookies","Cookies","Chatbot","_handleInputKeyPress","_handleQuickReplyPayload","hide","show","state","messages","showBot","shopWelcomeSent","clientToken","regenerateToken","undefined","get","set","uuid","path","says","msg","setState","request","queryInput","languageCode","df_client_call","name","axios","res","data","token","config","headers","post","process","REACT_APP_GOOGLE_PROJECT_ID","REACT_APP_DF_SESSION_ID","queryResult","fulfillmentMessages","console","log","response","status","that","setTimeout","x","Promise","resolve","df_event_query","window","location","pathname","resolveAfterXSeconds","history","listen","messagesEnd","scrollIntoView","behavior","talkInput","focus","preventDefault","stopPropagation","df_text_query","cards","card","message","overflow","overflowY","length","renderCards","quick_replies","returnedMessages","renderOneMessage","e","value","minHeight","maxHeight","position","bottom","right","border","renderMessages","ref","el","clear","paddingLeft","input","placeholder","onKeyPress","type","withRouter","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.05dbc1fa.chunk.js","sourcesContent":["import React from 'react';\n\n\n\nconst Message = (props) => {\n    return (\n\n        <div className=\"col s12 m8 offset-m2 l6 offset-l3\">\n            \n            <div className=\"card-panel grey lighten-5 z-depth-1\">\n                <div className=\"row valign-wrapper\">\n                    {props.speaks === 'bot' &&\n                        <div className=\"col s2\">\n                            <a href=\"/\" className=\"btn-floating btn-large waves-effect waves-light red\">{props.speaks}</a>\n                        </div>\n                    }\n                    <div className=\"col s10\">\n                        <span className=\"black-text\">\n                            {props.text}\n                        </span>\n                    </div>\n                    {props.speaks === 'user' &&\n                        <div className=\"col s2\">\n                            <a href=\"/\" className=\"btn-floating btn-large waves-effect waves-light red\">{props.speaks}</a>\n                           \n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default Message;\n","import React from 'react';\n\nconst Card = (props) => {\n    return (\n        <div  style={{ height: 270, paddingRight:30, float: 'left'}}>\n            <div className=\"card\">\n                <div className=\"card-image\" style={{ width: 240}}>\n                    <img alt={props.payload.header} src={props.payload.image} />\n                    <span className=\"card-title\">{props.payload.header}</span>\n                </div>\n                <div className=\"card-content\">\n                    {props.payload.description}\n                    <p> <a href=\"/\">{props.payload.price}</a></p>\n                </div>\n                <div className=\"card-action\">\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.payload.link}>GET NOW</a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\n\n\nconst QuickReply = (props) => {\n    if (props.reply.payload) {\n        return (\n            <a style={{ margin: 3}} href=\"/\" className=\"btn-floating btn-large waves-effect waves-light red\"\n               onClick={(event) =>\n                   props.click(\n                       event,\n                       props.reply.payload,\n                       props.reply.text\n                   )\n               }>\n                {props.reply.text}\n            </a>\n        );\n    } else {\n        return (\n            <a style={{ margin: 3}} href={props.reply.link}\n               className=\"btn-floating btn-large waves-effect waves-light red\">\n                {props.reply.text}\n            </a>\n        );\n    }\n\n};\n\nexport default QuickReply;\n","import React, { Component } from 'react';\nimport QuickReply from './QuickReply';\n\n\nclass QuickReplies extends Component {\n    constructor(props) {\n        super(props);\n        this._handleClick = this._handleClick.bind(this);\n    }\n\n    _handleClick(event, payload, text) {\n        this.props.replyClick(event, payload, text);\n    }\n\n    renderQuickReply(reply, i) {\n        return <QuickReply key={i} click={this._handleClick} reply={reply} />;\n    }\n\n    renderQuickReplies(quickReplies) {\n        if (quickReplies) {\n            return quickReplies.map((reply, i) => {\n                    return this.renderQuickReply(reply, i);\n                }\n            )\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col s12 m8 offset-m2 l6 offset-l3\">\n                <div className=\"card-panel grey lighten-5 z-depth-1\">\n                    <div className=\"row valign-wrapper\">\n                        <div className=\"col s2\">\n                            <a href=\"/\" className=\"btn-floating btn-large waves-effect waves-light red\">{this.props.speaks}</a>\n                        </div>\n                        <div id=\"quick-replies\" className=\"col s10\">\n                            {this.props.text && <p>\n                                {this.props.text}\n                            </p>\n                            }\n                            {this.renderQuickReplies(this.props.payload)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuickReplies;\n","import React, { Component } from 'react';\nimport axios from \"axios/index\";\nimport { withRouter } from 'react-router-dom';\n\nimport Cookies from 'universal-cookie';\nimport { v4 as uuid } from 'uuid';\n\nimport Message from './Message';\nimport Card from './Card';\nimport QuickReplies from './QuickReplies';\n\nconst cookies = new Cookies();\n\nclass Chatbot extends Component {\n    messagesEnd;\n    talkInput;\n\n    constructor(props) {\n        super(props);\n        // This binding is necessary to make `this` work in the callback\n        this._handleInputKeyPress = this._handleInputKeyPress.bind(this);\n        this._handleQuickReplyPayload = this._handleQuickReplyPayload.bind(this);\n\n        this.hide = this.hide.bind(this);\n        this.show = this.show.bind(this);\n        this.state = {\n            messages: [],\n            showBot: true,\n            shopWelcomeSent: false,\n            clientToken: false,\n            regenerateToken: 0\n        };\n        if (cookies.get('userID') === undefined) {\n            cookies.set('userID', uuid(), { path: '/' });\n        }\n    }\n\n    async df_text_query(text) {\n        let says = {\n            speaks: 'user',\n            msg: {\n                text : {\n                    text: text\n                }\n            }\n        }\n        this.setState({ messages: [...this.state.messages, says]});\n        const request = {\n            queryInput: {\n                text: {\n                    text: text,\n                    languageCode: 'en-US',\n                },\n            }\n        };\n        await this.df_client_call(request);\n    };\n\n\n\n    async df_event_query(event) {\n\n        const request = {\n            queryInput: {\n                event: {\n                    name: event,\n                    languageCode: 'en-US',\n                },\n            }\n        };\n\n        await this.df_client_call(request);\n\n    };\n\n    async df_client_call(request) {\n\n        try {\n\n            if (this.state.clientToken === false) {\n                const res = await axios.get('/api/get_client_token');\n                this.setState({clientToken: res.data.token});\n            }\n\n            var config = {\n                headers: {\n                    'Authorization': \"Bearer \" + this.state.clientToken,\n                    'Content-Type': 'application/json; charset=utf-8'\n                }\n            };\n\n\n            const res = await axios.post(\n                'https://dialogflow.googleapis.com/v2/projects/' + process.env.REACT_APP_GOOGLE_PROJECT_ID +\n                '/agent/sessions/' + process.env.REACT_APP_DF_SESSION_ID + cookies.get('userID') + ':detectIntent',\n                request,\n                config\n            );\n\n            let  says = {};\n\n            if (res.data.queryResult.fulfillmentMessages ) {\n                for (let msg of res.data.queryResult.fulfillmentMessages) {\n                    says = {\n                        speaks: 'bot',\n                        msg: msg\n                    }\n                    this.setState({ messages: [...this.state.messages, says]});\n                }\n            }\n        } catch (e) {\n            console.log(e);\n            if (e.response.status === 401 && this.state.regenerateToken < 1) {\n                this.setState({ clientToken: false, regenerateToken: 1 });\n                this.df_client_call(request);\n            }\n            else {\n                let says = {\n                    speaks: 'bot',\n                    msg: {\n                        text : {\n                            text: \"I'm having troubles. I need to terminate. will be back later\"}\n                    }\n                }\n                this.setState({ messages: [...this.state.messages, says]});\n                let that = this;\n                setTimeout(function(){\n                    that.setState({ showBot: false})\n                }, 2000);\n            }\n        }\n\n    }\n\n    resolveAfterXSeconds(x) {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve(x);\n            }, x * 1000);\n        })\n    }\n\n    async componentDidMount() {\n        this.df_event_query('Welcome');\n\n        if (window.location.pathname === '/shop' && !this.state.shopWelcomeSent) {\n            await this.resolveAfterXSeconds(1);\n            this.df_event_query('WELCOME_SHOP');\n            this.setState({ shopWelcomeSent: true, showBot: true });\n        }\n\n        this.props.history.listen(() => {\n            if (this.props.history.location.pathname === '/shop' && !this.state.shopWelcomeSent) {\n                this.df_event_query('WELCOME_SHOP');\n                this.setState({ shopWelcomeSent: true, showBot: true });\n            }\n        });\n    }\n\n    componentDidUpdate() {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n        if ( this.talkInput ) {\n            this.talkInput.focus();\n        }\n    }\n\n    show(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState({showBot: true});\n    }\n\n    hide(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState({showBot: true});\n    }\n\n    _handleQuickReplyPayload(event, payload, text) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        switch (payload) {\n            case 'recommended_yes':\n                this.df_event_query('SHOW_RECOMMENDATIONS');\n                break;\n            case 'training_masterclass':\n                this.df_event_query('MASTERCLASS');\n                break;\n            default:\n                this.df_text_query(text);\n                break;\n        }\n    }\n\n    renderCards(cards) {\n        return cards.map((card, i) => <Card key={i} payload={card}/>);\n    }\n\n    renderOneMessage(message, i) {\n\n        if (message.msg && message.msg.text && message.msg.text.text) {\n            return <Message key={i} speaks={message.speaks} text={message.msg.text.text}/>;\n\n        } else if (message.msg\n            && message.msg.payload\n            && message.msg.payload.cards) { //message.msg.payload.fields.cards.listValue.values\n\n            return <div key={i}>\n                <div className=\"card-panel grey lighten-5 z-depth-1\">\n                    <div style={{overflow: 'hidden'}}>\n                        <div className=\"col s2\">\n                            <a href=\"/\" className=\"btn-floating btn-large waves-effect waves-light red\">{message.speaks}</a>\n                        </div>\n                        <div style={{ overflow: 'auto', overflowY: 'scroll'}}>\n                            <div style={{ height: 300, width:message.msg.payload.cards.length * 270}}>\n                                {this.renderCards(message.msg.payload.cards)}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        } else if (message.msg &&\n            message.msg.payload &&\n            message.msg.payload.quick_replies\n        ) {\n            return <QuickReplies\n                text={message.msg.payload.text ? message.msg.payload.text : null}\n                key={i}\n                replyClick={this._handleQuickReplyPayload}\n                speaks={message.speaks}\n                payload={message.msg.payload.quick_replies}/>;\n        }\n    }\n\n    renderMessages(returnedMessages) {\n        if (returnedMessages) {\n            return returnedMessages.map((message, i) => {\n                    return this.renderOneMessage(message, i);\n                }\n            )\n        } else {\n            return null;\n        }\n    }\n\n    _handleInputKeyPress(e) {\n        if (e.key === 'Enter') {\n            this.df_text_query(e.target.value);\n            e.target.value = '';\n        }\n    }\n\n    render() {\n        if (this.state.showBot) {\n            return (\n                <div style={{ minHeight: 500, maxHeight: 470, width:400, position: 'absolute', bottom: 0, right: 0, border: '1px solid lightgray'}}>\n                    <nav>\n                        <div className=\"nav-wrapper\">\n                            <a href=\"/\" className=\"brand-logo\">ChatBot</a>\n                            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                                <li><a href=\"/\" onClick={this.hide}>Close</a></li>\n                            </ul>\n                        </div>\n                    </nav>\n\n                    <div id=\"chatbot\"  style={{ minHeight: 388, maxHeight: 388, width:'100%', overflow: 'auto'}}>\n\n                        {this.renderMessages(this.state.messages)}\n                        <div ref={(el) => { this.messagesEnd = el; }}\n                             style={{ float:\"left\", clear: \"both\" }}>\n                        </div>\n                    </div>\n                    <div className=\" col s12\" >\n                        <input style={{margin: 0, paddingLeft: '1%', paddingRight: '1%', width: '98%'}} ref={(input) => { this.talkInput = input; }} placeholder=\"type a message:\"  onKeyPress={this._handleInputKeyPress} id=\"user_says\" type=\"text\" />\n                    </div>\n\n                </div>\n            );\n        } else {\n            return (\n                <div style={{ minHeight: 40, maxHeight: 500, width:400, position: 'absolute', bottom: 0, right: 0, border: '1px solid lightgray'}}>\n                    <nav>\n                        <div className=\"nav-wrapper\">\n                            <a href=\"/\" className=\"brand-logo\">ChatBot</a>\n                            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                                <li><a href=\"/\" onClick={this.show}>Show</a></li>\n                            </ul>\n                        </div>\n                    </nav>\n                    <div ref={(el) => { this.messagesEnd = el; }}\n                         style={{ float:\"left\", clear: \"both\" }}>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default withRouter(Chatbot);","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\n// import Header from './Header';\n// import Landing from './pages/Landing';\n// import About from './pages/About';\n// import Shop from './shop/Shop';\nimport Chatbot from './chatbot/Chatbot';\n\nconst App = () => (\n    <div>\n       <BrowserRouter>\n           <div className=\"container\">\n               {/* <Header />\n               <Route exact path=\"/\" component={Landing} />\n               <Route exact path=\"/about\" component={About} />\n               <Route exact path=\"/shop\" component={Shop} /> */}\n               <Chatbot />\n           </div>\n       </BrowserRouter>\n    </div>\n)\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'materialize-css/dist/css/materialize.min.css';\nimport '@fontsource/public-sans';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}